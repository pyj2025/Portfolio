{"version":3,"sources":["MenuContainer.tsx","HeaderBar.tsx","FooterBar.tsx","BodyContent.tsx","App.js","reportWebVitals.js","index.js"],"names":["SidebarContainer","styled","div","ListItem","a","MenuContainer","isProjectsOpen","toggleAboutOpen","toggleSkillsOpen","toggleProjectsOpen","useState","onClick","icon","faUser","faCode","faFolderOpen","faFolder","faFile","href","faGithub","faLinkedin","Container","HeaderBar","DockIcon","FooterBar","isAboutMinimized","isSkillsMinimized","isProjectsMinimized","setAboutMinimized","setSkillsMinimized","setProjectsMinimized","MenuItemWindow","Rnd","MenuItemTopbar","TopbarContainer","CloseBtn","button","TopbarTitle","TopbarTitleText","span","BodyContent","isAboutOpen","isSkillsOpen","windowRef","React","useRef","newZIndex","prevNode","prevZIndex","handleFocus","_e","node","ref","current","style","zIndex","default","x","y","width","height","dragHandleClassName","minWidth","minHeight","onDragStart","className","title","faTimes","faMinus","faExpandAlt","Wrapper","BodyContainer","MaintenanceMessage","App","inMaintenance","setAboutOpen","setSkillsOpen","setProjectsOpen","state","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82f9b855.chunk.js","sourcesContent":["import { faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  faCode,\n  faFile,\n  faFolderOpen,\n  faFolder,\n  faUser,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst SidebarContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  background-color: #333333;\n  color: white;\n  /* display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  flex-wrap: wrap;\n  flex-shrink: 1;\n  overflow-y: auto;\n  padding: 1rem; */\n`;\n\nconst ListItem = styled.a`\n  /* font-size: 1.5em;\n  text-align: center;\n  transition: background-color 0.2s;\n  display: flex;\n  align-items: center;\n  box-sizing: border-box;\n  width: 8rem;\n  height: 8rem;\n  flex-direction: column;\n  justify-content: center;\n  padding: 1rem;\n  border-radius: 0.2rem; */\n\n  width: 8rem;\n  height: 8rem;\n  color: white;\n  text-decoration: none;\n  cursor: pointer;\n  :hover {\n    background-color: #3c3c3c;\n  }\n`;\n\nexport type MenuContainerProps = {\n  isProjectsOpen: boolean;\n  toggleAboutOpen: () => void;\n  toggleSkillsOpen: () => void;\n  toggleProjectsOpen: () => void;\n};\n\nconst MenuContainer: React.FC<MenuContainerProps> = ({\n  isProjectsOpen,\n  toggleAboutOpen,\n  toggleSkillsOpen,\n  toggleProjectsOpen,\n}) => {\n  const [isOpen, setOpen] = useState(false);\n\n  return (\n    <SidebarContainer>\n      <ListItem onClick={toggleAboutOpen}>\n        <FontAwesomeIcon icon={faUser} />\n        About\n      </ListItem>\n      <ListItem onClick={toggleSkillsOpen}>\n        <FontAwesomeIcon icon={faCode} />\n        Skills\n      </ListItem>\n      <ListItem onClick={toggleProjectsOpen}>\n        <FontAwesomeIcon icon={isProjectsOpen ? faFolderOpen : faFolder} />\n        Projects\n      </ListItem>\n      <ListItem onClick={toggleProjectsOpen}>\n        <FontAwesomeIcon icon={faFile} />\n        Resume\n      </ListItem>\n      <ListItem href=\"https://github.com/pyj2025\">\n        <FontAwesomeIcon icon={faGithub} />\n        Github\n      </ListItem>\n      <ListItem href=\"https://www.linkedin.com/in/devjoon/\">\n        <FontAwesomeIcon icon={faLinkedin} />\n        Linkedin\n      </ListItem>\n    </SidebarContainer>\n  );\n};\n\nexport default MenuContainer;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  background-color: #3c3c3c;\n  color: white;\n`;\n\nfunction HeaderBar() {\n  return (\n    <Container>\n      <span>Joon Park</span>\n    </Container>\n  );\n}\n\nexport default HeaderBar;\n","import { faCode, faFolder, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  background-color: #2879bd;\n`;\n\nconst DockIcon = styled.a`\n  flex: 1;\n  color: white;\n`;\n\nexport type FooterBarProps = {\n  isAboutMinimized: boolean;\n  isSkillsMinimized: boolean;\n  isProjectsMinimized: boolean;\n  toggleAboutOpen: () => void;\n  setAboutMinimized: (flag: boolean) => void;\n  toggleSkillsOpen: () => void;\n  setSkillsMinimized: (flag: boolean) => void;\n  toggleProjectsOpen: () => void;\n  setProjectsMinimized: (flag: boolean) => void;\n};\n\nconst FooterBar: React.FC<FooterBarProps> = ({\n  isAboutMinimized,\n  isSkillsMinimized,\n  isProjectsMinimized,\n  toggleAboutOpen,\n  setAboutMinimized,\n  toggleSkillsOpen,\n  setSkillsMinimized,\n  toggleProjectsOpen,\n  setProjectsMinimized,\n}) => {\n  const handleAboutMinimized = () => {\n    setAboutMinimized(false);\n    toggleAboutOpen();\n  };\n\n  const handleSkillsMinimized = () => {\n    setSkillsMinimized(false);\n    toggleSkillsOpen();\n  };\n\n  const handleProjectsMinimized = () => {\n    setProjectsMinimized(false);\n    toggleProjectsOpen();\n  };\n\n  return (\n    <Container>\n      {isAboutMinimized ? (\n        <DockIcon onClick={handleAboutMinimized}>\n          <FontAwesomeIcon icon={faUser} />\n        </DockIcon>\n      ) : null}\n      {isSkillsMinimized ? (\n        <DockIcon onClick={handleSkillsMinimized}>\n          <FontAwesomeIcon icon={faCode} />\n        </DockIcon>\n      ) : null}\n      {isProjectsMinimized ? (\n        <DockIcon onClick={handleProjectsMinimized}>\n          <FontAwesomeIcon icon={faFolder} />\n        </DockIcon>\n      ) : null}\n    </Container>\n  );\n};\n\nexport default FooterBar;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Rnd } from \"react-rnd\";\nimport {\n  faCode,\n  faExpandAlt,\n  faFolder,\n  faMinus,\n  faTimes,\n  faUser,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Container = styled.div`\n  background-color: #3c3c3c;\n  color: white;\n`;\n\nconst MenuItemWindow = styled(Rnd)`\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  border: solid 1px black;\n  background-color: white;\n  color: black;\n`;\n\nconst MenuItemTopbar = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  height: 35px;\n  margin: 0 auto;\n  background-color: #333436;\n  align-items: center;\n  color: white;\n`;\n\nconst TopbarContainer = styled.div`\n  margin-right: auto;\n`;\n\nconst CloseBtn = styled.button`\n  padding: 0;\n  border: none;\n  background: none;\n  color: white;\n  margin-left: 10px;\n`;\n\nconst TopbarTitle = styled.div`\n  text-align: center;\n`;\n\nconst TopbarTitleText = styled.span`\n  margin-left: 6px;\n  pointer-events: none;\n`;\n\nexport type BodyContentProps = {\n  isAboutOpen: boolean;\n  isSkillsOpen: boolean;\n  isProjectsOpen: boolean;\n  toggleAboutOpen: () => void;\n  setAboutMinimized: (flag: boolean) => void;\n  toggleSkillsOpen: () => void;\n  setSkillsMinimized: (flag: boolean) => void;\n  toggleProjectsOpen: () => void;\n  setProjectsMinimized: (flag: boolean) => void;\n};\n\nconst BodyContent: React.FC<BodyContentProps> = ({\n  isAboutOpen,\n  isSkillsOpen,\n  isProjectsOpen,\n  toggleAboutOpen,\n  setAboutMinimized,\n  toggleSkillsOpen,\n  setSkillsMinimized,\n  toggleProjectsOpen,\n  setProjectsMinimized,\n}) => {\n  const windowRef = React.useRef({\n    newZIndex: \"10\",\n    prevNode: null as unknown as HTMLElement,\n    prevZIndex: null as unknown as string,\n  });\n\n  const handleAboutMinimized = () => {\n    setAboutMinimized(true);\n    toggleAboutOpen();\n  };\n\n  const handleSkillsMinimized = () => {\n    setSkillsMinimized(true);\n    toggleSkillsOpen();\n  };\n\n  const handleProjectsMinimized = () => {\n    setProjectsMinimized(true);\n    toggleProjectsOpen();\n  };\n\n  const handleFocus = (_e: any, node: { node: HTMLElement }) => {\n    const ref = windowRef.current;\n\n    if (windowRef.current.prevNode) {\n      ref.prevNode.style.zIndex = ref.prevZIndex;\n    }\n\n    ref.prevNode = node.node;\n    ref.prevZIndex = ref.prevNode.style.zIndex;\n    ref.prevNode.style.zIndex = ref.newZIndex;\n  };\n\n  return (\n    <Container>\n      {isAboutOpen ? (\n        <MenuItemWindow\n          default={{\n            x: 40,\n            y: -550,\n            width: 500,\n            height: 300,\n          }}\n          dragHandleClassName=\"topbar\"\n          minWidth={500}\n          minHeight={300}\n          onDragStart={handleFocus}\n        >\n          <MenuItemTopbar className=\"topbar\">\n            <TopbarContainer>\n              <CloseBtn title=\"Close\" onClick={toggleAboutOpen}>\n                <FontAwesomeIcon icon={faTimes} />\n              </CloseBtn>\n              <CloseBtn title=\"Minimize\" onClick={handleAboutMinimized}>\n                <FontAwesomeIcon icon={faMinus} />\n              </CloseBtn>\n              <CloseBtn title=\"Expand\" onClick={toggleAboutOpen}>\n                <FontAwesomeIcon icon={faExpandAlt} />\n              </CloseBtn>\n            </TopbarContainer>\n            <TopbarTitle>\n              <FontAwesomeIcon icon={faUser} />\n              <TopbarTitleText>About</TopbarTitleText>\n            </TopbarTitle>\n          </MenuItemTopbar>\n          <div>Body</div>\n        </MenuItemWindow>\n      ) : null}\n      {isSkillsOpen ? (\n        <MenuItemWindow\n          default={{\n            x: 0,\n            y: 0,\n            width: 500,\n            height: 300,\n          }}\n          dragHandleClassName=\"topbar\"\n          minWidth={500}\n          minHeight={300}\n          onDragStart={handleFocus}\n        >\n          <MenuItemTopbar className=\"topbar\">\n            <TopbarContainer>\n              <CloseBtn title=\"Close\" onClick={toggleSkillsOpen}>\n                <FontAwesomeIcon icon={faTimes} />\n              </CloseBtn>\n              <CloseBtn title=\"Minimize\" onClick={handleSkillsMinimized}>\n                <FontAwesomeIcon icon={faMinus} />\n              </CloseBtn>\n              <CloseBtn title=\"Expand\" onClick={toggleSkillsOpen}>\n                <FontAwesomeIcon icon={faExpandAlt} />\n              </CloseBtn>\n            </TopbarContainer>\n            <TopbarTitle>\n              <FontAwesomeIcon icon={faCode} />\n              <TopbarTitleText>Skills</TopbarTitleText>\n            </TopbarTitle>\n          </MenuItemTopbar>\n          <div>Body</div>\n        </MenuItemWindow>\n      ) : null}\n      {isProjectsOpen ? (\n        <MenuItemWindow\n          default={{\n            x: 0,\n            y: -200,\n            width: 500,\n            height: 300,\n          }}\n          dragHandleClassName=\"topbar\"\n          minWidth={500}\n          minHeight={300}\n          onDragStart={handleFocus}\n        >\n          <MenuItemTopbar title=\"Close\" className=\"topbar\">\n            <TopbarContainer>\n              <CloseBtn onClick={toggleProjectsOpen}>\n                <FontAwesomeIcon icon={faTimes} />\n              </CloseBtn>\n              <CloseBtn title=\"Minimize\" onClick={handleProjectsMinimized}>\n                <FontAwesomeIcon icon={faMinus} />\n              </CloseBtn>\n              <CloseBtn title=\"Expand\" onClick={toggleProjectsOpen}>\n                <FontAwesomeIcon icon={faExpandAlt} />\n              </CloseBtn>\n            </TopbarContainer>\n            <TopbarTitle>\n              <FontAwesomeIcon icon={faFolder} />\n              <TopbarTitleText>Projects</TopbarTitleText>\n            </TopbarTitle>\n          </MenuItemTopbar>\n          <div>Body</div>\n        </MenuItemWindow>\n      ) : null}\n    </Container>\n  );\n};\n\nexport default BodyContent;\n","import MenuContainer from \"./MenuContainer\";\nimport HeaderBar from \"./HeaderBar\";\nimport FooterBar from \"./FooterBar\";\nimport BodyContent from \"./BodyContent\";\nimport styled from \"styled-components\";\nimport React, { useState } from \"react\";\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-rows: 3% auto 10%;\n  height: 100vh;\n  width: 100vw;\n  background-color: black;\n  text-align: center;\n`;\n\nconst BodyContainer = styled.div`\n  background-color: #1e1e1e;\n  justify-content: center;\n  text-align: center;\n`;\n\nconst MaintenanceMessage = styled.div`\n  color: white;\n  font-weight: bold;\n  justify-content: center;\n  text-align: center;\n`;\n\nfunction App() {\n  const [inMaintenance, setMaintenance] = useState(true);\n\n  const [isAboutOpen, setAboutOpen] = useState(false);\n  const [isAboutMinimized, setAboutMinimized] = useState(false);\n  const [isSkillsOpen, setSkillsOpen] = useState(false);\n  const [isSkillsMinimized, setSkillsMinimized] = useState(false);\n  const [isProjectsOpen, setProjectsOpen] = useState(false);\n  const [isProjectsMinimized, setProjectsMinimized] = useState(false);\n\n  const toggleAboutOpen = () => {\n    setAboutOpen((state) => !state);\n  };\n\n  const toggleSkillsOpen = () => {\n    setSkillsOpen((state) => !state);\n  };\n\n  const toggleProjectsOpen = () => {\n    setProjectsOpen((state) => !state);\n  };\n\n  return (\n    <Wrapper>\n      {inMaintenance ? (\n        <MaintenanceMessage>\n          Site is in maintenance now. Please come back later...\n        </MaintenanceMessage>\n      ) : (\n        <>\n          <HeaderBar />\n          <BodyContainer>\n            <MenuContainer\n              isProjectsOpen={isProjectsOpen}\n              toggleAboutOpen={toggleAboutOpen}\n              toggleSkillsOpen={toggleSkillsOpen}\n              toggleProjectsOpen={toggleProjectsOpen}\n            />\n            <BodyContent\n              isAboutOpen={isAboutOpen}\n              isSkillsOpen={isSkillsOpen}\n              isProjectsOpen={isProjectsOpen}\n              toggleAboutOpen={toggleAboutOpen}\n              setAboutMinimized={setAboutMinimized}\n              toggleSkillsOpen={toggleSkillsOpen}\n              setSkillsMinimized={setSkillsMinimized}\n              toggleProjectsOpen={toggleProjectsOpen}\n              setProjectsMinimized={setProjectsMinimized}\n            />\n          </BodyContainer>\n          <FooterBar\n            isAboutMinimized={isAboutMinimized}\n            isSkillsMinimized={isSkillsMinimized}\n            isProjectsMinimized={isProjectsMinimized}\n            toggleAboutOpen={toggleAboutOpen}\n            setAboutMinimized={setAboutMinimized}\n            toggleSkillsOpen={toggleSkillsOpen}\n            setSkillsMinimized={setSkillsMinimized}\n            toggleProjectsOpen={toggleProjectsOpen}\n            setProjectsMinimized={setProjectsMinimized}\n          />\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}